Index: app/src/main/java/com/example/admin/projectpoetato/Activities/LeagueActivity/LeagueActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.admin.projectpoetato.Activities.LeagueActivity;\n\nimport android.graphics.Color;\nimport android.net.Uri;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v4.app.FragmentTransaction;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatDelegate;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.util.Log;\nimport android.widget.FrameLayout;\n\nimport com.example.admin.projectpoetato.API.Resources.League.LeagueApi;\nimport com.example.admin.projectpoetato.Activities.MainActivity.MainActivity;\nimport com.example.admin.projectpoetato.Fragments.LeagueInfoFragment;\nimport com.example.admin.projectpoetato.Models.League;\nimport com.example.admin.projectpoetato.R;\nimport com.r0adkll.slidr.Slidr;\nimport com.r0adkll.slidr.model.SlidrConfig;\nimport com.r0adkll.slidr.model.SlidrInterface;\nimport com.r0adkll.slidr.model.SlidrPosition;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\nimport retrofit2.Retrofit;\nimport retrofit2.converter.gson.GsonConverterFactory;\n\nimport static com.example.admin.projectpoetato.Utilities.GlobalVariables.URL_API_PATHOFEXILE;\n\npublic class LeagueActivity extends AppCompatActivity implements LeagueInfoFragment.OnFragmentInteractionListener{\n    // Class Variables\n    public static final String TAG = LeagueActivity.class.getSimpleName();\n\n    // UI Variables\n    private RecyclerView mRvLeagues;\n    private LeagueAdapter mLeagueAdapter;\n    private RecyclerView.LayoutManager mLeagueLayoutManager;\n    private FrameLayout mFragmentContainer;\n    private SlidrInterface mSlidr;\n\n    // Variables\n    List<League> mLeagueList = new ArrayList<>();\n\n\n\n    /**********************************************************************************************\n     *                                    Class Functions                                         *\n     *********************************************************************************************/\n    public void SendLeagueRequest(){\n        Retrofit retrofit = new Retrofit.Builder()\n                .baseUrl(URL_API_PATHOFEXILE)\n                .addConverterFactory(GsonConverterFactory.create())\n                .build();\n\n        LeagueApi mLeague = retrofit.create(LeagueApi.class);\n\n        Call<List<League>> mCallLeague = mLeague.getLeagues(\"main\",null,0,0,0);\n\n        // retrofit enqueue creates the background handling!! no need for async tasks :)\n        mCallLeague.enqueue(new Callback<List<League>>() {\n            @Override\n            public void onResponse(Call<List<League>> call, Response<List<League>> response) {\n                LeagueOnResponse(call, response);\n            }\n\n            @Override\n            public void onFailure(Call<List<League>> call, Throwable t) {\n                Log.d(TAG, \"onFailure: \" + t.getMessage());\n            }\n        });\n    }\n\n    /**\n     * Method that get called when there is response for League Call\n     * @param call : call\n     * @param response : league response\n     */\n    public void LeagueOnResponse(Call<List<League>> call, Response<List<League>> response){\n        if(!response.isSuccessful()){\n            Log.d(TAG, \"onResponse Code: \" + response.code());\n            return;\n        }\n\n        List<League> leagues = response.body();\n\n\n        // Add the Retrieved List of Leagues to the Adapter & Set the Adapter\n        mLeagueList = leagues;\n        UpdateLeagueList(mLeagueList);\n\n        for(League league : leagues){\n            String content = \"\";\n            content += \"ID: \" + league.getId() + \"\\t\";\n            content += \"Desc: \" + league.getDescription() + \"\\t\";\n            content += \"regAt: \" + league.getRegisterAt() + \"\\t\";\n            content += \"URL: \" + league.getUrl() + \"\\t\";\n            content += \"startAt: \" + league.getStartAt() + \"\\t\";\n            content += \"endAt: \" + league.getEndAt() + \"\\t\";\n            content += \"leagueEvent: \" + league.getLeagueEvent() + \"\\t\";\n\n            // This takes 5 ms extra... consider if it's worth it.\n            for(int i = 0; i < league.getRules().size(); i++){\n                content += \"rule #\" + (i+1) + \" \" + league.getRules().get(i) + \"\\t\";\n            }\n            content += \"\\n\";\n\n            Log.d(TAG, \"Content = \" + content);\n        }\n    }\n\n    public void OnAdapterItemClick(int position){\n        // TODO: Create Fragment with item information\n        Log.d(TAG, \"position = \" + position);\n        OpenLeagueInfoFragment(mLeagueList.get(position));\n    }\n\n    public void CreateRecyclerView(){\n        mRvLeagues = findViewById(R.id.listLeagueLeague);\n        mRvLeagues.setHasFixedSize(true);\n        mLeagueLayoutManager = new LinearLayoutManager(this);\n        mLeagueAdapter = new LeagueAdapter(mLeagueList);\n        mRvLeagues.setLayoutManager(mLeagueLayoutManager);\n        mRvLeagues.setAdapter(mLeagueAdapter);\n    }\n\n    public void UpdateLeagueList(List<League> leagues){\n        mLeagueAdapter = new LeagueAdapter(leagues);\n        mRvLeagues.setAdapter(mLeagueAdapter);\n        mLeagueAdapter.setOnItemClickListener(this::OnAdapterItemClick);\n    }\n\n    // Source: codinginflow.com\n    public void OpenLeagueInfoFragment(League league){\n        LeagueInfoFragment mLeagueInfoFragment = LeagueInfoFragment.newInstance(league);\n        FragmentManager mFragmentManager = getSupportFragmentManager();\n        FragmentTransaction mFragmentTransaction = mFragmentManager.beginTransaction();\n        // 4 Arguments, because we need for the back button as well!\n//        mFragmentTransaction.setCustomAnimations(R.anim.enter_from_right, R.anim.exit_to_right,\n//                R.anim.enter_from_right, R.anim.exit_to_right);\n        mFragmentTransaction.setCustomAnimations(R.anim.enter_from_right, R.anim.exit_to_right);\n        mFragmentTransaction.addToBackStack(null);\n        mFragmentTransaction.add(R.id.league_frame, mLeagueInfoFragment, LeagueInfoFragment.TAG).commit();\n    }\n\n    public void LockSlidr(){\n        mSlidr.lock();\n    }\n    public void UnlockSlidr(){\n        mSlidr.unlock();\n    }\n\n\n    /**********************************************************************************************\n     *                                   Override Functions                                       *\n     *********************************************************************************************/\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_league);\n\n        // Slidr: https://github.com/r0adkll/Slidr\n        mSlidr = Slidr.attach(this);\n\n        // UI Find View\n        mFragmentContainer = findViewById(R.id.league_frame);\n\n        // Init Recyclerview\n        CreateRecyclerView();\n\n        // Action Bar\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\n\n        // Send Request\n        SendLeagueRequest();\n\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        Log.d(TAG, \"Destroyed\");\n    }\n\n    @Override\n    public void onFragmentInteraction(Uri uri) {\n        Log.d(TAG, \"onFragmentInteraction\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/projectpoetato/Activities/LeagueActivity/LeagueActivity.java	(revision d4af0a4968810d5698b83d8c267f37dd1f499842)
+++ app/src/main/java/com/example/admin/projectpoetato/Activities/LeagueActivity/LeagueActivity.java	(date 1541965303000)
@@ -10,6 +10,7 @@
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.util.Log;
+import android.view.MotionEvent;
 import android.widget.FrameLayout;
 
 import com.example.admin.projectpoetato.API.Resources.League.LeagueApi;
@@ -165,7 +166,7 @@
         setContentView(R.layout.activity_league);
 
         // Slidr: https://github.com/r0adkll/Slidr
-        mSlidr = Slidr.attach(this);
+        //mSlidr = Slidr.attach(this);
 
         // UI Find View
         mFragmentContainer = findViewById(R.id.league_frame);
@@ -187,6 +188,15 @@
         Log.d(TAG, "Destroyed");
     }
 
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        if(event.getAction() == MotionEvent.){
+            Log.d(TAG, "MotionEvent.ACTION_MOVE");
+        }
+        return true;
+    }
+    
+
     @Override
     public void onFragmentInteraction(Uri uri) {
         Log.d(TAG, "onFragmentInteraction");
